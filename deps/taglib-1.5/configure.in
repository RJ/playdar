dnl =======================================================
dnl FILE: configure.in.in
dnl =======================================================

dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)
dnl                       modified by Walter Tasin (tasin@kdevelop.org)
dnl                       for c++ console applications

dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.

dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.

dnl    You should have received a copy of the GNU Library General Public License
dnl    along with this library; see the file COPYING.LIB.  If not, write to
dnl    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
dnl    Boston, MA 02111-1307, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_SYSTEM
dnl Perform program name transformation
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(taglib,1.4)

dnl almost the same like KDE_SET_PEFIX but the path is /usr/local
dnl
unset CDPATH
dnl make /usr/local the default for the installation
AC_PREFIX_DEFAULT(/usr/local)

if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
  ac_configure_args="$ac_configure_args --prefix $prefix"
fi
KDE_FAST_CONFIGURE
KDE_CONF_FILES

dnl without this order in this file, automake will be confused!
dnl
AM_CONFIG_HEADER(config.h)

dnl checks for programs.
dnl first check for c/c++ compilers
AC_CHECK_COMPILERS

dnl CXXFLAGS="$NOOPT_CXXFLAGS" dnl __kdevelop[noopt]__
dnl CFLAGS="$NOOPT_CFLAGS" dnl __kdevelop[noopt]__
CXXFLAGS="$CXXFLAGS $USE_EXCEPTIONS" dnl __kdevelop[exc]__

dnl create only shared libtool-libraries
AC_ENABLE_SHARED(yes)

dnl set the following to yes, if you want to create static
dnl libtool-libraries, too.
AC_ENABLE_STATIC(no)

dnl create a working libtool-script
KDE_PROG_LIBTOOL

dnl activate the next macro call for DLOPEN tests and setting LIBDL
dnl   (n.b. KDE_MISC_TESTS does the same to you, so use either this or the next one)
dnl KDE_CHECK_DLOPEN

dnl activate the next macro call for some additional tests
dnl   (compat, crypt, socket, nsl, dlopen, ...)
dnl KDE_MISC_TESTS dnl __kdevelop__

dnl KDE_NEED_FLEX dnl __kdevelop__
dnl AC_PROG_YACC dnl __kdevelop__

dnl KDE_CHECK_EXTRA_LIBS
all_libraries="$all_libraries $USER_LDFLAGS"
all_includes="$all_includes $USER_INCLUDES"
AC_SUBST(all_includes)
AC_SUBST(all_libraries)

AC_SUBST(AUTODIRS)

#AM_INIT_AUTOMAKE(taglib,1.0)
dnl don't remove the below
dnl AC_OUTPUT(taglib-config)
dnl AC_OUTPUT(taglib.pc)

AC_DEFUN([AC_HAVE_ZLIB],
[
        AC_DEFINE(HAVE_ZLIB, 1, [have zlib])
        have_zlib=true
])

AC_DEFUN([AC_NO_ZLIB],
[
        AC_DEFINE(HAVE_ZLIB, 0, [have zlib])
        have_zlib=false
])

AC_CHECK_HEADER(zlib.h, AC_HAVE_ZLIB, AC_NO_ZLIB)
AM_CONDITIONAL(link_zlib, test x$have_zlib = xtrue)

AC_DEFUN([AC_HAVE_CPPUNIT],
[
        AC_DEFINE(HAVE_CPPUNIT, 1, [have cppunit])
        have_cppunit=true
])

AC_DEFUN([AC_NO_CPPUNIT],
[
        AC_DEFINE(HAVE_CPPUNIT, 0, [have cppunit])
        have_cppunit=false
])

AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_CHECK_HEADER(cppunit/extensions/HelperMacros.h, AC_HAVE_CPPUNIT, AC_NO_CPPUNIT)
AC_LANG_RESTORE
AM_CONDITIONAL(build_tests, test x$have_cppunit = xtrue)
dnl =======================================================
dnl FILE: ./bindings/c/configure.in.in
dnl =======================================================

dnl AC_OUTPUT(bindings/c/taglib_c.pc)
KDE_CREATE_SUBDIRSLIST
AC_CONFIG_FILES([ Makefile ])
AC_CONFIG_FILES([ bindings/Makefile ])
AC_CONFIG_FILES([ bindings/c/Makefile ])
AC_CONFIG_FILES([ examples/Makefile ])
AC_CONFIG_FILES([ taglib/Makefile ])
AC_CONFIG_FILES([ taglib/ape/Makefile ])
AC_CONFIG_FILES([ taglib/flac/Makefile ])
AC_CONFIG_FILES([ taglib/mpc/Makefile ])
AC_CONFIG_FILES([ taglib/mpeg/Makefile ])
AC_CONFIG_FILES([ taglib/mpeg/id3v1/Makefile ])
AC_CONFIG_FILES([ taglib/mpeg/id3v2/Makefile ])
AC_CONFIG_FILES([ taglib/mpeg/id3v2/frames/Makefile ])
AC_CONFIG_FILES([ taglib/ogg/Makefile ])
AC_CONFIG_FILES([ taglib/ogg/flac/Makefile ])
AC_CONFIG_FILES([ taglib/ogg/speex/Makefile ])
AC_CONFIG_FILES([ taglib/ogg/vorbis/Makefile ])
AC_CONFIG_FILES([ taglib/toolkit/Makefile ])
AC_CONFIG_FILES([ taglib/trueaudio/Makefile ])
AC_CONFIG_FILES([ taglib/wavpack/Makefile ])
AC_CONFIG_FILES([ tests/Makefile ])
AC_CONFIG_FILES([ taglib-config ])
AC_CONFIG_FILES([ taglib.pc ])
AC_CONFIG_FILES([ bindings/c/taglib_c.pc ])
AC_OUTPUT
if test "x$have_zlib" = "xfalse"; then
	echo "**************************************************"
	echo "*"
	echo "* You don't seem to have libz / zlib.h installed."
	echo "* Compressed frames have been disabled."
	echo "*"
	echo "**************************************************"
fi
# Check if KDE_SET_PREFIX was called, and --prefix was passed to configure
if test -n "$kde_libs_prefix" -a -n "$given_prefix"; then
  # And if so, warn when they don't match
  if test "$kde_libs_prefix" != "$given_prefix"; then
    # And if kde doesn't know about the prefix yet
    echo ":"`kde-config --path exe`":" | grep ":$given_prefix/bin/:" 2>&1 >/dev/null
    if test $? -ne 0; then
      echo ""
      echo "Warning: you chose to install this package in $given_prefix,"
      echo "but KDE was found in $kde_libs_prefix."
      echo "For this to work, you will need to tell KDE about the new prefix, by ensuring"
      echo "that KDEDIRS contains it, e.g. export KDEDIRS=$given_prefix:$kde_libs_prefix"
      echo "Then restart KDE."
      echo ""
    fi
  fi
fi

if test x$GXX = "xyes" -a x$kde_have_gcc_visibility = "xyes" -a x$kde_cv_val_qt_gcc_visibility_patched = "xno"; then
  echo ""
  echo "Your GCC supports symbol visibility, but the patch for Qt supporting visibility"
  echo "was not included. Therefore, GCC symbol visibility support remains disabled."
  echo ""
  echo "For better performance, consider including the Qt visibility supporting patch"
  echo "located at:"
  echo ""
  echo "http://bugs.kde.org/show_bug.cgi?id=109386"
  echo ""
  echo "and recompile all of Qt and KDE. Note, this is entirely optional and"
  echo "everything will continue to work just fine without it."
  echo ""
fi

if test "$all_tests" = "bad"; then
  if test ! "$cache_file" = "/dev/null"; then
    echo ""
    echo "Please remove the file $cache_file after changing your setup"
    echo "so that configure will find the changes next time."
    echo ""
  fi
else
  echo ""
  echo "Good - your configure finished. Start make now"
  echo ""
fi
