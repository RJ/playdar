Installation
============
This covers building from source specifically on Debian Linux.
Should be easy on other Linuxes too. 
Playdar also builds on Windows, using visual studio express.
Playdar also builds on Mac OS X (intel) using gcc + stuff from macports.


Linux Dependencies
------------------
Assuming debian/ubuntu. Otherwise find similarly named packages:

1) sudo apt-get install \
    sqlite3 libsqlite3-dev \
    cmake \
    libtag1-dev \
    libossp-uuid-dev libossp-uuid15

    NB: "libossp-uuid" is different to "libuuid" in debian. 
        make sure you install the correct uuid package.

2) Need boost, but also boost::asio, which was only added to boost "recently".
   If your distro has >= boost 1.35 then install all the 1.35 boost packages
   you can find, including -dev versions, and it will work. Deb/Lenny has it.

   If your distro boost packages are < 1.35:
   Build boost from source. It's easy, but can take ~45mins to build. 
   See boost.org for latest version.
   NB: check the --layout option to configure, i missed this and it left 
       -gcc43-mt in the filenames, I ended up fixing it manually like this:
       $ cd /usr/local/lib
       $ for f in `ls libboo*-gcc43-mt.so`; do L=`echo $f \
         | sed 's/-gcc43-mt//'`; echo $L; ln -s $f $L; done

  In Ubuntu 8.10 (intrepid) you can do this:

  sudo apt-get install libboost-thread1.35-dev libboost-thread1.35.0 \
   libboost-system1.35-dev libboost-system1.35.0 libboost-regex1.35-dev \
   libboost-regex1.35.0 libboost-program-options1.35.0 \
   libboost-program-options1.35-dev libboost-iostreams1.35.0 \
   libboost-iostreams1.35-dev libboost-filesystem1.35.0 \
   libboost-filesystem1.35-dev doxygen

Mac Dependencies
----------------
Using Leopard MacPorts:

    sudo port selfupdate
    sudo port upgrade installed
    sudo port install cmake boost ossp-uuid taglib


Windows Dependenceies
---------------------
Good luck! Just install everything listed and hope for the best.
It is known to work.


Compile it:
-----------
If you've installed something in non-standard locations, look in CMakeLists.txt
at the include/library paths and make changes if need be.

 $ cd playdar-daemon
 $ cd build
 $ cmake ..

Build the daemon with built-in local library resolver:

 $ make playdar

Build the other plugins:

 $ make lan_udp
 $ make gateway_script  # NB: requires boost >=1.37
 $ make darknet

Or to just build everything at once:

 $ make 

First Run and Scanning
----------------------
Make the empty database:

 $ sqlite3 ./collection.db < etc/schema.sql

Now run the scanner to index your music:

 $ ./scanner ./collection.db /your/mp3/dir


Running Playdar
---------------
Edit etc/playdar.conf and specify your name etc.
Run playdar from the playdar-daemon directory: 

    $ ./bin/playdar -c ./etc/playdar.conf

Now hit up: http://localhost:8888/ to check it's running.
Make JSON requests yourself, go to /stats, or more importantly:

Check out www.playdar.org for the latest demo interface.
